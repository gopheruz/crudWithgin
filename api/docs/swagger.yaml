basePath: /v1
definitions:
  models.CreateUser:
    properties:
      email:
        type: string
      first_name:
        type: string
      last_name:
        type: string
    type: object
  models.GetAllUsersResult:
    properties:
      count:
        type: integer
      users:
        items:
          $ref: '#/definitions/models.User'
        type: array
    type: object
  models.UpdateUser:
    properties:
      email:
        type: string
      first_name:
        type: string
      last_name:
        type: string
    type: object
  models.User:
    properties:
      created_at:
        type: string
      email:
        type: string
      first_name:
        type: string
      id:
        type: string
      last_name:
        type: string
    type: object
info:
  contact: {}
  description: This is a blog service api.
  title: Swagger for user api
  version: "1.0"
paths:
  /create:
    post:
      consumes:
      - application/json
      description: Create user
      parameters:
      - description: CreateUser
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.CreateUser'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.User'
      summary: Create a user
      tags:
      - user
  /delete/{id}:
    delete:
      consumes:
      - application/json
      description: Delete user by ID
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses: {}
      summary: Delete user by ID
      tags:
      - user
  /getall:
    get:
      consumes:
      - application/json
      description: Get all users
      parameters:
      - in: query
        name: limit
        type: integer
      - in: query
        name: page
        type: integer
      - in: query
        name: search
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.GetAllUsersResult'
      summary: Get all users
      tags:
      - user
  /getbyemail/{email}:
    get:
      consumes:
      - application/json
      description: Get user by email
      parameters:
      - description: email
        in: path
        name: email
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.User'
      summary: Get users by email
      tags:
      - user
  /update/{id}:
    put:
      consumes:
      - application/json
      description: Update user by id
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: string
      - description: UpdateUser
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.UpdateUser'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.User'
      summary: Update user by id
      tags:
      - user
  /users/{id}:
    get:
      consumes:
      - application/json
      description: Get user by id
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.User'
      summary: Get user by id
      tags:
      - user
swagger: "2.0"
